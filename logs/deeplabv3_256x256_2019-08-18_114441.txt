partitionData is on 
resplitValidation is on 
doTraining is on 
archiveNet is on 
saveImages is on 
sendNotification is on 
evaluateNet is on 
forceConvert is off 
preProcess is off 
useCachedNet is off 
recoverCheckpoint is off 
Checking sequences...
Loaded (meta)data from cache...
Partitioning test and training Data...
Starting parallel pool (parpool) using the 'local' profile ...
Connected to the parallel pool (number of workers: 16).
Counting per-label pixel distribution...
      <strong>Name</strong>      <strong>PixelCount</strong>    <strong>ImagePixelCount</strong>
    <strong>________</strong>    <strong>__________</strong>    <strong>_______________</strong>
    'leader'    5.8905e+06      1.4900e+09   
    'stroke'    1.7160e+06      3.6045e+07   
    'sky'       1.0831e+09      1.7867e+09   
    'cloud'     4.7730e+08      9.0990e+08   
    'ground'    2.1039e+08      1.7867e+09   
    'other'     8.3264e+06      9.8966e+08   
Datastores cached
Splitting training/validation data...
Training images: 21810 
Validation images: 5453 
Testing images: 4971 
Data cached
Setting up Network...
Network created
Setting up Training...
options = 
  <a href="matlab:helpPopup nnet.cnn.TrainingOptionsSGDM" style="font-weight:bold">TrainingOptionsSGDM</a> with properties:

                     Momentum: 9.0000e-01
             InitialLearnRate: 1.0000e-02
    LearnRateScheduleSettings: [1×1 struct]
             L2Regularization: 3.0000e-03
      GradientThresholdMethod: 'l2norm'
            GradientThreshold: 10
                    MaxEpochs: 30
                MiniBatchSize: 50
                      Verbose: 1
             VerboseFrequency: 50
               ValidationData: [1×1 pixelLabelImageDatastore]
          ValidationFrequency: 25
           ValidationPatience: 6
                      Shuffle: 'every-epoch'
               CheckpointPath: '~/Raiden/networks/checkpoints'
         ExecutionEnvironment: 'auto'
                   WorkerLoad: []
                    OutputFcn: []
                        Plots: 'training-progress'
               SequenceLength: 'longest'
         SequencePaddingValue: 0
         DispatchInBackground: 0
Beginning training...
Training on single GPU.
|======================================================================================================================|
|  Epoch  |  Iteration  |  Time Elapsed  |  Mini-batch  |  Validation  |  Mini-batch  |  Validation  |  Base Learning  |
|         |             |   (hh:mm:ss)   |   Accuracy   |   Accuracy   |     Loss     |     Loss     |      Rate       |
|======================================================================================================================|
{Operation terminated by user during <a href="matlab:matlab.internal.language.introspective.errorDocCallback('nnet.internal.cnn.util.aggregateArrayFromObservations', '/usr/local/MATLAB/R2019a/toolbox/nnet/cnn/+nnet/+internal/+cnn/+util/aggregateArrayFromObservations.m', 12)" style="font-weight:bold">nnet.internal.cnn.util.aggregateArrayFromObservations</a> (<a href="matlab: opentoline('/usr/local/MATLAB/R2019a/toolbox/nnet/cnn/+nnet/+internal/+cnn/+util/aggregateArrayFromObservations.m',12,0)">line 12</a>)

In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('nnet.internal.cnn.util.ValidationPredictImageStrategy/predict', '/usr/local/MATLAB/R2019a/toolbox/nnet/cnn/+nnet/+internal/+cnn/+util/ValidationPredictImageStrategy.m', 63)" style="font-weight:bold">nnet.internal.cnn.util.ValidationPredictImageStrategy/predict</a> (<a href="matlab: opentoline('/usr/local/MATLAB/R2019a/toolbox/nnet/cnn/+nnet/+internal/+cnn/+util/ValidationPredictImageStrategy.m',63,0)">line 63</a>)
                response = nnet.internal.cnn.util.aggregateArrayFromObservations(...
In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('nnet.internal.cnn.util.ValidationPredictImageStrategy/predictAndComputeLoss', '/usr/local/MATLAB/R2019a/toolbox/nnet/cnn/+nnet/+internal/+cnn/+util/ValidationPredictImageStrategy.m', 34)" style="font-weight:bold">nnet.internal.cnn.util.ValidationPredictImageStrategy/predictAndComputeLoss</a> (<a href="matlab: opentoline('/usr/local/MATLAB/R2019a/toolbox/nnet/cnn/+nnet/+internal/+cnn/+util/ValidationPredictImageStrategy.m',34,0)">line 34</a>)
            [predictions, response] = this.predict( net, data );
In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('nnet.internal.cnn.util.ValidationReporter/addValidationToSummary', '/usr/local/MATLAB/R2019a/toolbox/nnet/cnn/+nnet/+internal/+cnn/+util/ValidationReporter.m', 137)" style="font-weight:bold">nnet.internal.cnn.util.ValidationReporter/addValidationToSummary</a> (<a href="matlab: opentoline('/usr/local/MATLAB/R2019a/toolbox/nnet/cnn/+nnet/+internal/+cnn/+util/ValidationReporter.m',137,0)">line 137</a>)
            [predictions, response, loss] = this.PredictStrategy.predictAndComputeLoss( net, this.Data );
In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('nnet.internal.cnn.util.ValidationReporter/computeIteration', '/usr/local/MATLAB/R2019a/toolbox/nnet/cnn/+nnet/+internal/+cnn/+util/ValidationReporter.m', 74)" style="font-weight:bold">nnet.internal.cnn.util.ValidationReporter/computeIteration</a> (<a href="matlab: opentoline('/usr/local/MATLAB/R2019a/toolbox/nnet/cnn/+nnet/+internal/+cnn/+util/ValidationReporter.m',74,0)">line 74</a>)
                this.addValidationToSummary(summary, net);
In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('nnet.internal.cnn.util.VectorReporter/computeAndReport', '/usr/local/MATLAB/R2019a/toolbox/nnet/cnn/+nnet/+internal/+cnn/+util/VectorReporter.m', 56)" style="font-weight:bold">nnet.internal.cnn.util.VectorReporter/computeAndReport</a> (<a href="matlab: opentoline('/usr/local/MATLAB/R2019a/toolbox/nnet/cnn/+nnet/+internal/+cnn/+util/VectorReporter.m',56,0)">line 56</a>)
                feval( method, this.Reporters{i}, varargin{:} );
In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('nnet.internal.cnn.util.VectorReporter/computeIteration', '/usr/local/MATLAB/R2019a/toolbox/nnet/cnn/+nnet/+internal/+cnn/+util/VectorReporter.m', 24)" style="font-weight:bold">nnet.internal.cnn.util.VectorReporter/computeIteration</a> (<a href="matlab: opentoline('/usr/local/MATLAB/R2019a/toolbox/nnet/cnn/+nnet/+internal/+cnn/+util/VectorReporter.m',24,0)">line 24</a>)
            computeAndReport( this, 'computeIteration', summary, network );
In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('nnet.internal.cnn.Trainer/train', '/usr/local/MATLAB/R2019a/toolbox/nnet/cnn/+nnet/+internal/+cnn/Trainer.m', 137)" style="font-weight:bold">nnet.internal.cnn.Trainer/train</a> (<a href="matlab: opentoline('/usr/local/MATLAB/R2019a/toolbox/nnet/cnn/+nnet/+internal/+cnn/Trainer.m',137,0)">line 137</a>)
                    reporter.computeIteration( summary, net );
In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('trainNetwork>doTrainNetwork', '/usr/local/MATLAB/R2019a/toolbox/nnet/cnn/trainNetwork.m', 234)" style="font-weight:bold">trainNetwork>doTrainNetwork</a> (<a href="matlab: opentoline('/usr/local/MATLAB/R2019a/toolbox/nnet/cnn/trainNetwork.m',234,0)">line 234</a>)
trainedNet = trainer.train(trainedNet, trainingDispatcher);
In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('trainNetwork', '/usr/local/MATLAB/R2019a/toolbox/nnet/cnn/trainNetwork.m', 163)" style="font-weight:bold">trainNetwork</a> (<a href="matlab: opentoline('/usr/local/MATLAB/R2019a/toolbox/nnet/cnn/trainNetwork.m',163,0)">line 163</a>)
    [trainedNet, info] = doTrainNetwork(layersOrGraph, opts, X, Y);
In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('CNN_Segmentation_Train_and_Evaluate', '/home/tyson/Dropbox/Academic/4th Year/ELEN4012/Raiden/matlab/CNN_Segmentation_Train_and_Evaluate.m', 574)" style="font-weight:bold">CNN_Segmentation_Train_and_Evaluate</a> (<a href="matlab: opentoline('/home/tyson/Dropbox/Academic/4th Year/ELEN4012/Raiden/matlab/CNN_Segmentation_Train_and_Evaluate.m',574,0)">line 574</a>)
    [net, networkStatus.info] = trainNetwork(pximds, net, options);} 
CNN_Segmentation_Train_and_Evaluate
networkName =
    'deeplabv3'
imageSize =
   256   256
logFileFull = 
    "~/Raiden/logs/deeplabv3_256x256_2019-08-18_115031.txt"
